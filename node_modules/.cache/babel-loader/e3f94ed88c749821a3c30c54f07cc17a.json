{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ajink\\\\Desktop\\\\real-steel\\\\src\\\\components\\\\Payment.js\";\nimport React, { Component } from 'react';\nimport { View, Text, Button } from 'react-native';\nimport RNUpiPayment from 'react-native-upi-pay'; // function Payment() {\n//     return (\n//         <div>\n//         </div>\n//     )\n// }\n// export default Payment\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      Status: \"\",\n      txnId: \"\",\n      GOOGLE_PAY: 'GOOGLE_PAY',\n      PHONEPE: 'PHONEPE',\n      PAYTM: 'PAYTM',\n      message: \"\"\n    };\n  }\n\n  render() {\n    that = this;\n\n    function floo(paymentApp) {\n      RNUpiPayment.initializePayment({\n        vpa: 'something@bank',\n        //your upi address like 12345464896@okhdfcbank\n        payeeName: ' abc',\n        // payee name \n        amount: '1',\n        //amount\n        transactionNote: 'Testing Upi',\n        //note of transaction\n        transactionRef: 'aasf-332-aoei-fn' //some refs to aknowledge the transaction\n\n      }, paymentApp, successCallback, failureCallback);\n    }\n\n    function failureCallback(data) {\n      console.log(data); // in case no action taken\n\n      if (data['status'] == \"FAILURE\") {\n        that.setState({\n          Status: \"FAILURE\"\n        });\n        that.setState({\n          message: data['message']\n        });\n      } // in case of googlePay\n      else if (data['Status'] == \"FAILURE\") {\n          that.setState({\n            Status: \"FAILURE\"\n          });\n          that.setState({\n            message: \"app closed without doing payment\"\n          });\n          ;\n        } // in case of phonepe\n        else if (data['Status'] == \"Failed\") {\n            that.setState({\n              Status: \"FAILURE\"\n            });\n            that.setState({\n              message: \"app closed without doing payment\"\n            });\n          } // in case of phonepe\n          else if (data['Status'] == \"Submitted\") {\n              that.setState({\n                Status: \"FAILURE\"\n              });\n              that.setState({\n                message: \"transaction done but pending\"\n              });\n            } // any other case than above mentioned\n            else {\n                that.setState({\n                  Status: \"FAILURE\"\n                });\n                that.setState({\n                  message: data[Status]\n                });\n              }\n    }\n\n    function successCallback(data) {\n      //\n      console.log(data);\n      that.setState({\n        Status: \"SUCCESS\"\n      });\n      that.setState({\n        txnId: data['txnId']\n      });\n      that.setState({\n        message: \"Succccessfull payment\"\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(View, {\n      style: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(View, {\n        style: {\n          flexDirection: 'row',\n          padding: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          title: \"Google pay\",\n          onPress: () => {\n            floo(this.state.GOOGLE_PAY);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Phone pe\",\n          onPress: () => {\n            floo(this.state.PHONEPE);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"PAYTM\",\n          onPress: () => {\n            floo(this.state.PAYTM);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: this.state.Status + \" \" + this.state.txnId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this);\n  }\n\n} // TODO: What to do with the module?\n\nRNReactNativeUpiPay;","map":{"version":3,"sources":["C:/Users/ajink/Desktop/real-steel/src/components/Payment.js"],"names":["React","Component","View","Text","Button","RNUpiPayment","App","constructor","props","state","Status","txnId","GOOGLE_PAY","PHONEPE","PAYTM","message","render","that","floo","paymentApp","initializePayment","vpa","payeeName","amount","transactionNote","transactionRef","successCallback","failureCallback","data","console","log","setState","alignItems","justifyContent","flex","flexDirection","padding","RNReactNativeUpiPay"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport {View,Text,Button} from 'react-native'; \r\nimport RNUpiPayment from 'react-native-upi-pay';\r\n\r\n// function Payment() {\r\n//     return (\r\n//         <div>\r\n            \r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Payment\r\nexport default class App extends Component{\r\n    constructor(props){\r\n        super();\r\n        this.state={\r\n            Status:\"\", \r\n            txnId:\"\",\r\n            GOOGLE_PAY:'GOOGLE_PAY',\r\n\t\t\tPHONEPE:'PHONEPE',\r\n\t\t\tPAYTM:'PAYTM',\r\n            message:\"\"\r\n        }\r\n    }\r\n    render(){\r\n        that=this;\r\n        function floo(paymentApp){\r\n            RNUpiPayment.initializePayment({\r\n                vpa: 'something@bank',  \t\t//your upi address like 12345464896@okhdfcbank\r\n                payeeName: ' abc',   \t\t\t// payee name \r\n                amount: '1',\t\t\t\t//amount\r\n                transactionNote:'Testing Upi',\t\t//note of transaction\r\n                transactionRef: 'aasf-332-aoei-fn'\t//some refs to aknowledge the transaction\r\n            },paymentApp,successCallback,failureCallback);\r\n        }\r\n        function failureCallback(data){\r\n            console.log(data)\r\n            // in case no action taken\r\n            if (data['status']==\"FAILURE\"){\r\n                that.setState({Status:\"FAILURE\"})\r\n                that.setState({message:data['message']});\r\n            }\r\n            // in case of googlePay\r\n            else if (data['Status']==\"FAILURE\"){\r\n                that.setState({Status:\"FAILURE\"})\r\n                that.setState({message:\"app closed without doing payment\"});;\r\n            }\r\n            // in case of phonepe\r\n            else if (data['Status']==\"Failed\"){\r\n                that.setState({Status:\"FAILURE\"});\r\n                that.setState({message:\"app closed without doing payment\"});\r\n            }\r\n            // in case of phonepe\r\n            else if(data['Status']==\"Submitted\"){\r\n                that.setState({Status:\"FAILURE\"});\r\n                that.setState({message:\"transaction done but pending\"});\r\n            }\r\n            // any other case than above mentioned\r\n            else{\r\n                that.setState({Status:\"FAILURE\"});\r\n                that.setState({message:data[Status]});\r\n            }\r\n        }\r\n        function successCallback(data){\r\n            //\r\n            console.log(data);\r\n            that.setState({Status:\"SUCCESS\"});\r\n            that.setState({txnId:data['txnId']});\r\n            that.setState({message:\"Succccessfull payment\"});\r\n        }\r\n        return (\r\n        <View style={{alignItems:\"center\",justifyContent:\"center\",flex:1}}>\r\n        <View style={{flexDirection:'row',padding:5}}>\r\n\t\t\t<Button\r\n\t\t\ttitle=\"Google pay\"\r\n\t\t\tonPress={() => {floo(this.state.GOOGLE_PAY)}}\r\n\t\t\t/>\r\n\r\n\t\t\t<Button\r\n\t\t\ttitle=\"Phone pe\"\r\n\t\t\tonPress={() => {floo(this.state.PHONEPE)}}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\ttitle=\"PAYTM\"\r\n\t\t\tonPress={() => {floo(this.state.PAYTM)}}\r\n\t\t\t/>\r\n\t\t</View>\r\n\r\n        <Text>{this.state.Status+\" \"+this.state.txnId}</Text>\r\n        <Text>{this.state.message}</Text>\r\n        </View>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// TODO: What to do with the module?\r\nRNReactNativeUpiPay;\r\n"]},"metadata":{},"sourceType":"module"}